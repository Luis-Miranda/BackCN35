scalar EmailAddress
scalar URL
scalar Upload
directive @auth on FIELD_DEFINITION | FIELD 

type Query {
    getSingleClient:Client
    getClients:[Client]!
    getSingleOrder:Order
    getOrders:[Order]!
}

type Mutation {
    createNewClient(data: ClientInput!):Client!
    updateOneClient(id:ID!, data: ClientUpdateInput!):Client!@auth
    deleteOneClient(id:ID!):String!@auth
    createNewOrder(data: OrderInput!):Order!@auth
    updateOneOrder(id:ID!, data: OrderUpdateInput!):Order!@auth
    deleteOneOrder(id:ID!):String!@auth
    login(email:EmailAddress!, password:String):Auth!
}

type Auth{
    token:String!
    message:String!
}

type Order{
    _id:ID!
    title:String!
    content:String!
    client:Client!
    cover_photo:URL!
    liked_by: [Client]!
}

type Client{
    _id:ID!
    first_name:String!
    last_name:String!
    email:EmailAddress!
    birth_date:String!
    gender: GENDERS
    profile_pic:URL!
}

input OrderInput{
    title:String!
    content:String!
    #author:String!
    saucer_photo:Upload
}

input ClientInput{
    first_name:String!
    last_name:String!
    email:EmailAddress!
    password: String!
    birth_date:String
    gender: GENDERS
    profile_pic:String
}

input OrderUpdateInput{
    title:String
    content:String
    saucer_photo:URL
    liked_by: String
    is_active:Boolean
}

input ClientUpdateInput{
    first_name:String
    last_name:String
    email:EmailAddress
    birth_date:String
    gender: GENDERS
    profile_pic:String
    is_active:Boolean
}

enum GENDERS {
    M
    F
    O
}

